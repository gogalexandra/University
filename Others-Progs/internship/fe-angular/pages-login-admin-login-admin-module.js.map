{"version":3,"sources":["./src/app/pages/login-admin/index.ts","./src/app/pages/login-admin/login-admin.component.ts","./src/app/pages/login-admin/login-admin.component.html","./src/app/pages/login-admin/login-admin-routing.module.ts","./src/app/pages/login-admin/login-admin.module.ts","./src/app/model/adminLoginRequest.ts"],"names":[],"mappings":"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","file":"pages-login-admin-login-admin-module.js","sourcesContent":["export {LoginAdminComponent} from './login-admin.component';\r\n","import { Component } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AdminLoginRequest } from 'src/app/model/adminLoginRequest';\r\nimport { LoginServiceService } from 'src/app/services/login_service/login-service.service';\r\nimport { StorageService } from 'src/app/services/storage/storage.service'; \r\n\r\n\r\n@Component({\r\n  selector: 'app-login-admin',\r\n  templateUrl: './login-admin.component.html',\r\n  styleUrls: ['./login-admin.component.scss']\r\n})\r\nexport class LoginAdminComponent{\r\n  userName = '';\r\n  errorFlag = false;\r\n  errorString = '';\r\n  form = new FormGroup({\r\n    userCode: new FormControl('', [Validators.minLength(3), Validators.maxLength(3)]),\r\n    password: new FormControl('', [Validators.minLength(1), Validators.maxLength(10)])\r\n  });\r\n\r\n\r\n  constructor(\r\n    private loginService: LoginServiceService,\r\n    private storageService: StorageService,\r\n    private router: Router) { }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.valid) {\r\n      const admin = new AdminLoginRequest(this.form.controls.userCode.value, this.form.controls.password.value);\r\n      this.loginService.AdminLoginPostRequest(admin)\r\n        .subscribe(\r\n          (succesResponse) => {\r\n            this.storageService.saveAdminData(succesResponse);\r\n            this.router.navigate(['admin/home']);\r\n          },\r\n          (errorResponse) => {\r\n            this.errorString = 'Your username and password combo is incorrect! Please try again';\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-page-layout\">\r\n    <div class=\"title-and-subtext\">\r\n        <div class=\"login-title\">BOOK YOUR SEAT</div>\r\n        <div class=\"login-subtitle\">Simple. Efficient. Intuitive. </div>\r\n        <div class=\"login-subtitle\">Book your seat now and join the </div>\r\n        <div class=\"login-subtitle\">Yonder office adventure!</div>\r\n\r\n    </div>\r\n    <img src=\"/assets/images/background-image-login.png\" class=\"illustration\">\r\n    <div>\r\n        <div class=\"position-card\">\r\n            <mat-card>\r\n                <mat-card-title>LOG IN</mat-card-title>\r\n                    <mat-form-field [formGroup]=\"form\">\r\n                        <mat-label>Enter your user name</mat-label>\r\n                        <input type=\"text\" matInput variant=\"outlined\" required pattern=\"[A-Za-z]{3}\" id=\"user_name\"\r\n                            name=\"userName_field\" maxlength=\"3\" minlength=\"3\" formControlName=\"userCode\" placeholder=\"abc\">\r\n                        <mat-hint align=\"end\">{{form.controls['userCode'].value?.length || 0}}/3</mat-hint>\r\n                        <mat-error>Use 3-letter code </mat-error>\r\n                    </mat-form-field>\r\n                  \r\n                    <mat-form-field [formGroup]=\"form\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input type=\"password\" matInput variant=\"outlined\" required id=\"password\"\r\n                            name=\"password_field\" minlength=\"1\" maxlength=\"10\" formControlName=\"password\">\r\n                        <mat-error>Password cannot be blank </mat-error>\r\n                    </mat-form-field>\r\n\r\n                <span class=\"error-styling\" >{{errorString}}</span>\r\n                <div class=\"button-position\">\r\n                    <div matRipple>\r\n                    <button mat-flat-button class=\"login-button\" (click)=\"onSubmit()\" [disabled]=\"form.invalid\"\r\n                        color=\"warn\">log in</button>\r\n                    </div>\r\n                </div>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginAdminComponent } from './login-admin.component';\r\n\r\nconst routes: Routes = [{path: '', component: LoginAdminComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginAdminRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule, } from '@angular/forms';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\n\r\nimport { LoginAdminRoutingModule } from './login-admin-routing.module';\r\nimport { LoginAdminComponent } from '.';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginAdminComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginAdminRoutingModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatRippleModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class LoginAdminModule { }\r\n","import { UserLoginRequest } from \"./userLoginRequest\";\r\n\r\nexport class AdminLoginRequest extends UserLoginRequest{\r\n    password: string;\r\n    constructor(userCode: string, password: string){\r\n        super(userCode);\r\n        this.password = password;\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}