{"version":3,"sources":["./src/app/pages/login/index.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.module.ts","./src/app/pages/login/login-routing.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["export {LoginComponent} from './login.component';\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserLoginRequest } from 'src/app/model/userLoginRequest';\r\nimport { LoginServiceService } from 'src/app/services/login_service/login-service.service';\r\nimport { StorageService } from 'src/app/services/storage/storage.service';\r\nimport { DotNetHttpService, JavaHttpService } from 'src/app/shared';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  userName = '';\r\n  errorFlag = false;\r\n  errorString = '';\r\n  form = new FormGroup({\r\n    userCode: new FormControl('', [Validators.minLength(3)])\r\n  });\r\n\r\n  constructor(private dotNetHttpService: DotNetHttpService,\r\n              private javaHttpService: JavaHttpService,\r\n              private loginService: LoginServiceService,\r\n              private storageService: StorageService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.valid) {\r\n      const user = new UserLoginRequest(this.form.controls.userCode.value);\r\n      this.loginService.loginPostRequest(user)\r\n        .subscribe(\r\n          (succesResponse) => {\r\n            this.storageService.saveUserData(succesResponse);\r\n            this.router.navigate(['home']);\r\n          },\r\n          (errorResponse) => {\r\n            this.errorString = 'Your user name is incorrect! Please try again';\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getErrorMessage(): string {\r\n    return this.errorString;\r\n  }\r\n}\r\n","<div class=\"login-page-layout\">\r\n    <div class=\"title-and-subtext\">\r\n        <div class=\"login-title\">BOOK YOUR SEAT</div>\r\n        <div class=\"login-subtitle\">Simple. Efficient. Intuitive. </div>\r\n        <div class=\"login-subtitle\">Book your seat now and join the </div>\r\n        <div class=\"login-subtitle\">Yonder office adventure!</div>\r\n\r\n    </div>\r\n    <img src=\"/assets/images/background-image-login.png\" class=\"illustration\">\r\n    <div>\r\n        <div class=\"position-card\">\r\n            <mat-card>\r\n                <mat-card-title>LOG IN</mat-card-title>\r\n                <mat-form-field [formGroup]=\"form\">\r\n                    <mat-label>Enter your user name</mat-label>\r\n                    <input type=\"text\" matInput variant=\"outlined\" required pattern=\"[A-Za-z]{3}\" id=\"user_name\"\r\n                        name=\"userName_field\" maxlength=\"3\" minlength=\"3\" formControlName=\"userCode\" placeholder=\"abc\">\r\n                    <mat-hint align=\"end\">{{form.controls['userCode'].value?.length || 0}}/3</mat-hint>\r\n                    <mat-error *ngIf=\"true\">Use 3-letter code </mat-error>\r\n                </mat-form-field>\r\n                <span class=\"error-styling\" >{{errorString}}</span>\r\n                <div class=\"button-position\">\r\n                    <button mat-flat-button class=\"login-button\" (click)=\"onSubmit()\" [disabled]=\"form.invalid\"\r\n                        color=\"warn\">log in</button>\r\n                </div>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldControl, MatFormFieldModule} from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule, } from '@angular/forms';\r\n\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from '.';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [{path: '', component: LoginComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}