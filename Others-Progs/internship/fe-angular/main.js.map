{"version":3,"sources":["./src/app/model/changeSeatStatusRequest.ts","./src/app/guard/admin/admin-guard.ts","./src/app/shared/components/index.ts","./src/app/shared/http/index.ts","./src/app/shared/components/admin-navbar/admin-navbar.component.ts","./src/app/shared/components/admin-navbar/admin-navbar.component.html","./src/app/shared/components/admin-overview/admin-overview.component.ts","./src/app/shared/components/admin-overview/admin-overview.component.html","./src/app/services/employee/employee.service.ts","./src/app/shared/components/navbar/navbar.component.ts","./src/app/shared/components/navbar/navbar.component.html","./src/environments/environment.ts","./src/app/services/remove-booking/remove-booking.service.ts","./src/app/services/storage/storage.service.ts","./src/app/services/login_service/login-service.service.ts","./src/app/guard/user/auth.guard.ts","./src/app/shared/http/http-base.service.ts","./src/app/services/seat/seat.service.ts","./src/app/model/bookingRequest.ts","./src/app/shared/index.ts","./src/app/shared/components/my-bookings/my-bookings.component.ts","./src/app/shared/components/my-bookings/my-bookings.component.html","./src/app/shared/components/display-seats/display-seats.component.ts","./src/app/shared/components/display-seats/display-seats.component.html","./src/app/shared/http/dotnet-http.service.ts","./src/app/shared/shared.module.ts","./src/app/services/add-booking/add-booking.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/components/display-seats-admin/display-seats-admin.component.ts","./src/app/shared/components/display-seats-admin/display-seats-admin.component.html","./src/app/services/admin-seat-status/admin-seat-status.service.ts","./src/app/services/date-navigator/date-navigator.service.ts","./src/app/shared/components/remove-booking-popup/remove-booking-popup.component.ts","./src/app/shared/components/remove-booking-popup/remove-booking-popup.component.html","./src/app/shared/components/seats/seats.component.ts","./src/app/shared/components/seats/seats.component.html","./src/app/app.module.ts","./src/app/shared/components/seats-status-popup/seats-status-popup.component.ts","./src/app/shared/components/seats-status-popup/seats-status-popup.component.html","./src/app/shared/components/booking-popup/booking-popup.component.ts","./src/app/shared/components/booking-popup/booking-popup.component.html","./src/app/shared/components/seats-admin/index.ts","./src/app/shared/components/overview/overview.component.ts","./src/app/shared/components/overview/overview.component.html","./src/app/shared/components/seats-admin/seats-admin.component.ts","./src/app/shared/components/seats-admin/seats-admin.component.html","./src/app/model/user.ts","./src/app/shared/http/java-http.service.ts","./src/app/shared/components/date-selector/date-selector.component.ts","./src/app/shared/components/date-selector/date-selector.component.html","./src/app/app-routing.module.ts","./src/app/shared/components/delete-employee-popup/delete-employee-popup.component.ts","./src/app/shared/components/delete-employee-popup/delete-employee-popup.component.html","./src/app/services/bookins-service/bookings-service.service.ts","./src/app/shared/components/snackbars/generic-snack-bar/generic-snack-bar.component.ts","./src/app/shared/components/snackbars/generic-snack-bar/generic-snack-bar.component.html","./src/main.ts","./src/app/shared/components/seats/index.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\r\nexport class ChangeSeatStatusRequest {\r\n    status : boolean;\r\n    constructor(status : boolean) {\r\n        this.status = status;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { LoginServiceService } from 'src/app/services/login_service/login-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminAuthGuard implements CanActivate {\r\n  constructor(private loginService: LoginServiceService,\r\n              private router: Router){}\r\n  canActivate(): boolean {\r\n    if (this.loginService.isAdminLoggedIn()) {\r\n      return true;\r\n     }\r\n    else {\r\n      this.router.navigate(['/admin/login']);\r\n      return false;\r\n     }\r\n  }\r\n}\r\n","export * from './seats';\r\nexport *from './seats-admin';\r\n\r\n","export * from './dotnet-http.service';\r\nexport * from './java-http.service';\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/model/user';\r\nimport { StorageService } from 'src/app/services/storage/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-navbar',\r\n  templateUrl: './admin-navbar.component.html',\r\n  styleUrls: ['./admin-navbar.component.scss']\r\n})\r\nexport class AdminNavbarComponent implements OnInit {\r\n\r\n  user!: User;\r\n  constructor(private router: Router, private storageService: StorageService){\r\n    this.setUser();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.setUser();\r\n  }\r\n\r\n  setUser(): void{\r\n    const user = this.storageService.getUser();\r\n    if (user != null){\r\n      this.user = user;\r\n    }\r\n    else{\r\n      this.user.name = 'error';\r\n      this.user.userCode = 'error';\r\n    }\r\n  }\r\n\r\n  redirectToHome(): void{\r\n    this.router.navigate(['/admin/home']);\r\n  }\r\n\r\n  redirectToEmployees(): void{\r\n    this.router.navigate(['/admin/employee-management']);\r\n  }\r\n\r\n  logout(): void{\r\n    this.storageService.deleteUserData();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"shadow\">\r\n    <img src=\"assets/images/logo.jpg\" (click)=\"redirectToHome()\" alt=\"image\" width=\"106\" height=\"40\"/>\r\n\r\n    <div class=\"spacer\"></div>\r\n    <a mat-button [matMenuTriggerFor]=\"menu\"><div class=\"circle\">{{user.userCode}}</div></a>\r\n    <mat-menu #menu=\"matMenu\" class=\"dropdown shadow\">\r\n        <table mat-menu-item class=\"menu-first-item\">\r\n            <tr>\r\n                <td><div class=\"circle\">{{user.userCode}}</div></td>\r\n                <td><div class=\"text\">{{user.name}}</div></td>\r\n            </tr>\r\n        </table>\r\n        <a mat-menu-item (click)=\"logout()\" class=\"log-out\">Log out</a>\r\n      </mat-menu>\r\n    <a mat-button (click)=\"redirectToEmployees()\"><mat-icon>group</mat-icon></a>\r\n    <!-- <a mat-button><mat-icon>remove_red_eye</mat-icon></a> DESIGN WAS WITH THIS BUTTON HERE--> \r\n</mat-toolbar>","import { Component } from '@angular/core';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-overview',\r\n  templateUrl: './admin-overview.component.html',\r\n  styleUrls: ['./admin-overview.component.scss']\r\n})\r\nexport class AdminOverviewComponent {}\r\n","<p class=\"header-text\">SEATS STATUS</p>\r\n<app-display-seats-admin></app-display-seats-admin>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Employee } from 'src/app/model/employeeDto';\r\nimport { DotNetHttpService, JavaHttpService } from 'src/app/shared/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  url = '/employees';\r\n  employees: BehaviorSubject<Array<Employee>> = new BehaviorSubject(new Array());\r\n  constructor(private http: DotNetHttpService, private httpJava: JavaHttpService) { }\r\n\r\n  getEmployees(): Observable<Employee[]> {\r\n  return this.employees.asObservable();\r\n  }\r\n\r\n  deleteEmployee(id: String): Observable<boolean> {\r\n    return this.httpJava.delete<boolean>(`${this.url}/${id}`)\r\n  }\r\n\r\n  fetchAllEmployees(): void {\r\n    this.http.get<Employee[]>(this.url)\r\n      .subscribe(\r\n        (response) => this.employees.next(response)\r\n      )\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatMenu } from '@angular/material/menu';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/model/user';\r\nimport { StorageService } from 'src/app/services/storage/storage.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\n\r\nexport class NavbarComponent{\r\n  user!: User;\r\n  constructor(private router: Router, private storageService: StorageService){\r\n    this.setUser();\r\n  }\r\n\r\n  setUser(): void{\r\n    const user = this.storageService.getUser();\r\n    if (user != null){\r\n      this.user = user;\r\n    }\r\n    else{\r\n      this.user = new User('err','error');\r\n    }\r\n  }\r\n\r\n  logout(): void{\r\n    this.storageService.deleteUserData();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"shadow\">\r\n    <img src=\"assets/images/logo.jpg\" alt=\"image\" width=\"106\" height=\"40\"/>\r\n\r\n    <div class=\"spacer\"></div>\r\n    <a mat-button [matMenuTriggerFor]=\"menu\"><div class=\"circle\">{{user.userCode}}</div></a>\r\n    <mat-menu #menu=\"matMenu\" class=\"dropdown shadow\">\r\n        <table mat-menu-item class=\"menu-first-item\">\r\n            <tr>\r\n                <td><div class=\"circle\">{{user.userCode}}</div></td>\r\n                <td><div class=\"text\">{{user.name}}</div></td>\r\n            </tr>\r\n        </table>\r\n        <a mat-menu-item (click)=\"logout()\" class=\"log-out\">Log out</a>\r\n      </mat-menu>\r\n      <a mat-button [matMenuTriggerFor]=\"matMenu1.menu\"><mat-icon>calendar_month</mat-icon></a>\r\n      <app-my-bookings #matMenu1=\"menuInOtherComponent\"></app-my-bookings>\r\n</mat-toolbar>\r\n\r\n  \r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  javaServerAddress: 'http://192.168.5.147:8080',\r\n  dotnetServerAddress: 'http://192.168.5.147:8081/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { DotNetHttpService } from 'src/app/shared/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RemoveBookingService {\r\n\r\n  constructor(private http: DotNetHttpService) { }\r\n  url = '/booking';\r\n\r\n  removeBooking(SeatId: number, Date: string, userCode: string): Observable<boolean>{\r\n    return this.http.delete<boolean>(`${this.url}/${SeatId}/${Date}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from 'src/app/model/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n\r\n  constructor() { }\r\n\r\n  saveUserData(user: User): void {\r\n    localStorage.setItem('userCode', JSON.stringify(user.userCode));\r\n    localStorage.setItem('name', JSON.stringify(user.name));\r\n  }\r\n\r\n  getUser(): User | null{\r\n    const name = localStorage.getItem('name');\r\n    const userCode = localStorage.getItem('userCode');\r\n    if (name == null || userCode == null){\r\n      return null;\r\n    }\r\n    else{\r\n      return new User(JSON.parse(userCode), JSON.parse(name));\r\n    }\r\n  }\r\n\r\n  getUserToken(): string {\r\n    const stringToReturn = localStorage.getItem('userCode');\r\n    if (stringToReturn !== null) {\r\n      return stringToReturn;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  deleteUserData(): void {\r\n    localStorage.removeItem('userCode');\r\n    localStorage.removeItem('name');\r\n    localStorage.removeItem('isAdmin');\r\n  }\r\n\r\n  saveAdminData(admin: User): void {\r\n    this.saveUserData(admin);\r\n    localStorage.setItem('isAdmin', JSON.stringify(true));\r\n  }\r\n\r\n  isUserAdmin(): boolean | false {\r\n    const isAdmin = localStorage.getItem('isAdmin');\r\n    return isAdmin === null ? false : JSON.parse(isAdmin);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { AdminLoginRequest } from 'src/app/model/adminLoginRequest';\r\nimport { User } from 'src/app/model/user';\r\nimport { UserLoginRequest } from 'src/app/model/userLoginRequest';\r\nimport { JavaHttpService } from 'src/app/shared/http';\r\nimport { StorageService } from '../storage/storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginServiceService {\r\n\r\n\r\n  constructor(private http: JavaHttpService, private storageService: StorageService) { }\r\n  urlUser = '/login';\r\n  urlAdmin = '/login/admin';\r\n\r\n  AdminLoginPostRequest(adminLogRequest: AdminLoginRequest): Observable<User> {\r\n    return this.http.post<User, AdminLoginRequest>(this.urlAdmin, adminLogRequest);\r\n  }\r\n\r\n  loginPostRequest(userLogRequest: UserLoginRequest): Observable<User> {\r\n    return this.http.post<User, UserLoginRequest>(this.urlUser, userLogRequest);\r\n  }\r\n\r\n  isUserLoggedIn(): boolean {\r\n    const hasAuthenticationKey = this.storageService.getUserToken();\r\n    if (hasAuthenticationKey !== '') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isAdminLoggedIn(): boolean{\r\n    return this.isUserLoggedIn() && this.storageService.isUserAdmin();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { LoginServiceService } from 'src/app/services/login_service/login-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private loginService: LoginServiceService,\r\n              private router: Router){}\r\n  canActivate(): boolean {\r\n    if (this.loginService.isUserLoggedIn()) {\r\n      return true;\r\n     }\r\n    else {\r\n      this.router.navigate(['\\login']);\r\n      return false;\r\n     }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nexport abstract class HttpBaseService {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n  protected abstract getBasePath(): string;\r\n\r\n  public get<T>(entityPath: string): Observable<T> {\r\n    const path = `${this.getBasePath()}${entityPath}`;\r\n    return this.http.get<T>(path);\r\n  }\r\n\r\n  public post<T, U>(entityPath: string, body: U): Observable<T> {\r\n    const path = `${this.getBasePath()}${entityPath}`;\r\n    return this.http.post<T>(path, body);\r\n  }\r\n\r\n  public put<T, U>(entityPath: string, body: U): Observable<T> {\r\n    const path = `${this.getBasePath()}${entityPath}`;\r\n    return this.http.put<T>(path, body);\r\n  }\r\n\r\n  public delete<T>(entityPath: string): Observable<T> {\r\n    const path = `${this.getBasePath()}${entityPath}`;\r\n    return this.http.delete<T>(path);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AdminSeat } from 'src/app/model/adminSeat';\r\nimport { AdminSeatResponseDto } from 'src/app/model/adminSeatsResponseDto';\r\nimport { Seat } from 'src/app/model/seat';\r\nimport { SeatsResponseDto } from 'src/app/model/seatsResponseDto';\r\nimport { JavaHttpService } from 'src/app/shared/http/java-http.service';\r\nimport { StorageService } from '../storage/storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SeatService {\r\n  seats: BehaviorSubject<Array<Seat>> = new BehaviorSubject(new Array());\r\n  adminSeats: BehaviorSubject<Array<AdminSeat>> = new BehaviorSubject(new Array());\r\n  selectedDate!: Date;\r\n\r\n  constructor(private httpService: JavaHttpService, private storageService: StorageService) { }\r\n\r\n  setCurrentSelectedDate(date: Date): void{\r\n    this.selectedDate = date;\r\n  }\r\n\r\n  fetchSeatsBySelectedDate(): void{\r\n    this.fetchSeatsByDate(this.selectedDate);\r\n  }\r\n\r\n\r\n  fetchSeatsByDate(date: Date): void {\r\n    const dateRequest = date.toISOString().split('T')[0];\r\n    this.httpService\r\n      .get<SeatsResponseDto>(`/seats/${dateRequest}`)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.items;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        this.seats.next(response);\r\n      });\r\n  }\r\n  \r\n  hasNoBookings(): boolean {\r\n    return this.seats.value.filter(item => item.userCode === JSON.parse(this.storageService.getUserToken())).length === 0;\r\n  }\r\n\r\n\r\n  fetchAllSeats(): void {\r\n    this.httpService\r\n      .get<AdminSeatResponseDto>(`/seats/all`)\r\n      .pipe(\r\n        map((seatsResponse) => {\r\n          return seatsResponse.seats;\r\n        })\r\n      )\r\n      .subscribe((seatsResponse) => {\r\n        this.adminSeats.next(seatsResponse);\r\n      });\r\n  }\r\n}\r\n","export class BookingRequest{\r\n    bookedDate:string;\r\n    seatId:number;\r\n    employeeUserCode:string;\r\n\r\n    constructor( bookedDate:string, seatId:number, employeeUserCode:string){\r\n        this.bookedDate = bookedDate;\r\n        this.seatId = seatId;\r\n        this.employeeUserCode = employeeUserCode;\r\n    }\r\n}","export * from './shared.module';\r\nexport * from './http';\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { Booking } from 'src/app/model/booking';\r\nimport { Subscription } from 'rxjs';\r\nimport { BookingsService } from 'src/app/services/bookins-service/bookings-service.service';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatMenu } from '@angular/material/menu';\r\nimport { BookingWithProperty } from 'src/app/model/bookingsWithProperty';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-bookings',\r\n  templateUrl: './my-bookings.component.html',\r\n  styleUrls: ['./my-bookings.component.scss'],\r\n  exportAs: 'menuInOtherComponent',\r\n})\r\nexport class MyBookingsComponent {\r\n  bookings: Array<Booking> = [];\r\n  bookingsWithProperty: Array<BookingWithProperty> = []\r\n  subscription: Subscription = new Subscription();\r\n  deleteButtonDisable: boolean = true;\r\n  @Input() selectedDate: Date | undefined;\r\n\r\n  @ViewChild(MatMenu, { static: true })\r\n  menu!: MatMenu;\r\n  @ViewChild('select') select!: MatSelect;\r\n  allSelected = false;\r\n\r\n  constructor(private datePipe: DatePipe, private bookingsService: BookingsService, private seatService: SeatService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeBookings();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  subscribeBookings(): void {\r\n    this.bookingsService.fetchBookingsByUserCode();\r\n    this.subscription = this.bookingsService.bookings.subscribe((bookings) => {\r\n      this.bookings = bookings;\r\n      this.addProperty();\r\n    });\r\n  }\r\n\r\n  isBookingsStillValid(bookingDate: Date): boolean{\r\n    const todaysDate = new Date();\r\n    const date1 = this.datePipe.transform(todaysDate, \"yyyy-MM-dd\") || \"\"\r\n    const date2 = this.datePipe.transform(bookingDate, \"yyyy-MM-dd\") || \"\"\r\n    return  date1 < date2;\r\n  }\r\n\r\n  addProperty(): void {\r\n    this.bookingsWithProperty = this.bookings.filter(item => (this.isBookingsStillValid(item.bookedDate)))\r\n                                              .map((item) => { return { ...item, checked: false }; });\r\n  }\r\n\r\n  optionClick() {\r\n    this.deleteButtonDisable = (this.bookingsWithProperty.filter(item => item.checked).length ===0 );\r\n    this.allSelected = this.bookingsWithProperty.every(item => item.checked)\r\n  }\r\n\r\n  toggleAllSelection() {\r\n    this.deleteButtonDisable = !this.allSelected;\r\n    this.bookingsWithProperty.forEach(item => item.checked = this.allSelected);\r\n  }\r\n\r\n  deleteBookings(): void{\r\n    this.bookingsWithProperty = this.bookingsWithProperty.filter(item => !(item.checked));\r\n  }\r\n  \r\n  sendRequestForDeletion(): void {\r\n    this.bookingsService.sendBookingsForDeletion(this.bookingsWithProperty).subscribe(() => {\r\n      this.seatService.fetchSeatsBySelectedDate();\r\n      this.deleteBookings();\r\n    });\r\n    this.deleteButtonDisable = true\r\n  }\r\n}\r\n\r\n","<mat-menu md-prevent-menu-close=\"md-prevent-menu-close\" #menu=\"matMenu\">\r\n  <div>\r\n    <h1 class=\"header\">My bookings</h1>\r\n  </div>\r\n\r\n  <hr class=\"line1\">\r\n\r\n  <div class=\"noBookings\" *ngIf=\"this.bookingsWithProperty.length === 0\" (click)=\"$event.stopPropagation();\">\r\n      <p class=\"noBookingsMsg\">You do not have any bookings at the moment</p>\r\n  </div>\r\n  <div *ngIf=\"this.bookingsWithProperty.length !== 0\" (click)=\"$event.stopPropagation();\">\r\n    <div class=\"select-all\">\r\n      <mat-checkbox class=\"custom-frame\"\r\n                    [(ngModel)]=\"allSelected\"\r\n                    [checked]=\"allSelected\"\r\n                    (change)=\"toggleAllSelection()\">Select all</mat-checkbox>\r\n                    <a mat-button class=\"icon\" [disabled]=\"deleteButtonDisable\" (click)=\"!deleteButtonDisable && sendRequestForDeletion(); $event.stopPropagation();\"><mat-icon class=\"icon\">delete</mat-icon></a>\r\n    </div>\r\n    <hr class=\"line2\">\r\n    <div class=\"booking\" *ngFor=\"let booking of bookingsWithProperty\"  [ngClass]=\"{'selected': booking.checked}\" >\r\n      <mat-checkbox [(ngModel)]=\"booking.checked\" \r\n                    (ngModelChange)=\"optionClick()\"\r\n                    class=\"custom-frame\"> {{booking.bookedDate|date:'EEE, dd.MM' }}, Desk {{booking.id}}</mat-checkbox>\r\n    </div>\r\n  </div>\r\n</mat-menu>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Seat } from 'src/app/model/seat';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\n\r\n@Component({\r\n  selector: 'app-display-seats',\r\n  templateUrl: './display-seats.component.html',\r\n  styleUrls: ['./display-seats.component.scss'],\r\n})\r\nexport class DisplaySeatsComponent implements OnInit, OnDestroy {\r\n  seats: Array<Seat> = [];\r\n  subscription: Subscription = new Subscription();\r\n  @Input() selectedDate?: Date;\r\n\r\n  constructor(private seatService: SeatService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeSeats();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  subscribeSeats(): void {\r\n    this.subscription = this.seatService.seats.subscribe((seats) => {\r\n      this.seats = seats;\r\n    });\r\n  }\r\n}\r\n","<app-seats *ngFor=\"let seat of seats\" class=\"seat\" [seat]=\"seat\" [selectedDate]=\"selectedDate\"></app-seats>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DotNetHttpService extends HttpBaseService {\r\n\r\n  constructor(protected http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  protected getBasePath(): string {\r\n    return environment.dotnetServerAddress;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SeatsAdminComponent, SeatsComponent } from './components';\r\nimport { BookingPopupComponent } from './components/booking-popup/booking-popup.component';\r\nimport { DateSelectorComponent } from './components/date-selector/date-selector.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatButtonModule} from '@angular/material/button';\r\nimport { MatIconModule} from '@angular/material/icon';\r\nimport { OverviewComponent } from './components/overview/overview.component';\r\nimport { DisplaySeatsComponent } from './components/display-seats/display-seats.component';\r\nimport { RemoveBookingPopupComponent } from './components/remove-booking-popup/remove-booking-popup.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MyBookingsComponent } from './components/my-bookings/my-bookings.component';\r\nimport { AdminOverviewComponent } from './components/admin-overview/admin-overview.component';\r\nimport { DisplaySeatsAdminComponent } from './components/display-seats-admin/display-seats-admin.component';\r\nimport { GenericSnackBarComponent } from './components/snackbars/generic-snack-bar/generic-snack-bar.component';\r\nimport { SeatsStatusPopupComponent } from './components/seats-status-popup/seats-status-popup.component';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { AdminNavbarComponent } from './components/admin-navbar/admin-navbar.component';\r\nimport { DeleteEmployeePopupComponent } from './components/delete-employee-popup/delete-employee-popup.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DisplaySeatsComponent,\r\n    NavbarComponent,\r\n    OverviewComponent,\r\n    BookingPopupComponent,\r\n    SeatsComponent,\r\n    DateSelectorComponent,\r\n    MyBookingsComponent,\r\n    AdminOverviewComponent,\r\n    DisplaySeatsAdminComponent,\r\n    SeatsAdminComponent,\r\n    RemoveBookingPopupComponent,\r\n    GenericSnackBarComponent,\r\n    SeatsStatusPopupComponent,\r\n    AdminNavbarComponent,\r\n    DeleteEmployeePopupComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatSnackBarModule\r\n  ],\r\n  exports: [\r\n    DisplaySeatsComponent,\r\n    NavbarComponent,\r\n    AdminNavbarComponent,\r\n    OverviewComponent,\r\n    BookingPopupComponent,\r\n    DateSelectorComponent,\r\n    SeatsComponent,\r\n    MyBookingsComponent,\r\n    AdminOverviewComponent,\r\n    DisplaySeatsAdminComponent,\r\n    SeatsAdminComponent,\r\n    RemoveBookingPopupComponent,\r\n    GenericSnackBarComponent,\r\n    SeatsStatusPopupComponent,\r\n    DeleteEmployeePopupComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { BookingRequest } from 'src/app/model/bookingRequest';\r\nimport { DotNetHttpService } from 'src/app/shared/http/dotnet-http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddBookingService {\r\n  url = '/booking';\r\n  constructor(private http: DotNetHttpService) { }\r\n\r\n  addBookingPostRequest(bookingRequest: BookingRequest): Observable<boolean> {\r\n    return this.http.post<boolean, BookingRequest>(this.url, bookingRequest);\r\n  }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AdminSeat } from 'src/app/model/adminSeat';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\n\r\n@Component({\r\n  selector: 'app-display-seats-admin',\r\n  templateUrl: './display-seats-admin.component.html',\r\n  styleUrls: ['./display-seats-admin.component.scss']\r\n})\r\nexport class DisplaySeatsAdminComponent implements OnInit, OnDestroy {\r\n\r\n  adminSeats : Array<AdminSeat> = [];\r\n  subscription: Subscription = new Subscription();\r\n\r\n  constructor(private seatService: SeatService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.seatService.fetchAllSeats();\r\n    this.subscribeSeats();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  subscribeSeats(): void {\r\n     this.subscription = this.seatService.adminSeats.subscribe((adminSeats) => {\r\n     this.adminSeats = adminSeats; });\r\n  }\r\n}\r\n","<app-seats-admin *ngFor=\"let seat of adminSeats\" class=\"seat\" [adminSeat]=\"seat\"></app-seats-admin>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable} from 'rxjs';\r\nimport { AdminSeat } from 'src/app/model/adminSeat';\r\nimport { ChangeSeatStatusRequest } from 'src/app/model/changeSeatStatusRequest';\r\nimport { JavaHttpService } from 'src/app/shared/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminSeatStatusService {\r\n  seatsUrl= '/seats';\r\n  constructor(private httpService: JavaHttpService) { }\r\n  \r\n  changeSeatStatus(changeSeatStatusRequest: ChangeSeatStatusRequest, seatId : number) : Observable<boolean> {\r\n     return this.httpService.put<boolean, ChangeSeatStatusRequest>(`${this.seatsUrl}/${seatId}/status`,changeSeatStatusRequest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DateNavigatorService {\r\n\r\n  constructor() { }\r\n\r\n  public bound: number = 7;\r\n  public startDay = new Date();\r\n\r\n  public isAWorkingDay(dateToCheck: Date): boolean {\r\n    const dayOfWeek = dateToCheck.getDay();\r\n    const isWorkDay = (dayOfWeek !== 6) && (dayOfWeek !== 0);\r\n    return isWorkDay;\r\n  }\r\n\r\n  private changeBoundIfWorkingDay(): void {\r\n    if (this.isAWorkingDay(this.startDay)) {\r\n      this.bound = 8;\r\n    }\r\n  }\r\n\r\n  public setNextDay(day: Date, offSet: number): void {\r\n    day.setDate(day.getDate() + offSet);\r\n  }\r\n\r\n  private storeDate(dateToCreate: Date, dates: Date[]): void {\r\n    dates.push(new Date(dateToCreate));\r\n  }\r\n\r\n  public buildDatesArray(dates: Date[]): void {\r\n    this.changeBoundIfWorkingDay();\r\n    for (let i = 0; i < this.bound; i++) {\r\n      if (this.isAWorkingDay(this.startDay)) {\r\n        this.storeDate(this.startDay, dates);\r\n        this.setNextDay(this.startDay, 1);\r\n      } else {\r\n        if (this.startDay.getDay() === 6) {  // we are on saturday\r\n          this.setNextDay(this.startDay, 2);\r\n        } else {\r\n          this.setNextDay(this.startDay, 1); //we are on sunday\r\n        }\r\n        this.storeDate(this.startDay, dates);\r\n        this.setNextDay(this.startDay, 1);  // after storing the date, we go on next day\r\n      }\r\n    }\r\n    this.startDay = new Date();\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { RemoveBookingService } from 'src/app/services/remove-booking/remove-booking.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DialogData } from '../seats';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\nimport { Seat } from 'src/app/model/seat';\r\nimport { GenericSnackBarComponent } from '../snackbars/generic-snack-bar/generic-snack-bar.component';\r\nimport { catchError, map} from 'rxjs/operators';\r\nimport { SnackBarData } from 'src/app/model/snakBarData';\r\nimport { of } from 'rxjs';\r\nimport { BookingsService } from 'src/app/services/bookins-service/bookings-service.service';\r\n\r\n@Component({\r\n  selector: 'app-remove-booking-popup',\r\n  templateUrl: './remove-booking-popup.component.html',\r\n  styleUrls: ['./remove-booking-popup.component.scss'],\r\n})\r\nexport class RemoveBookingPopupComponent {\r\n  seat: Seat | undefined;\r\n  date: string;\r\n  dateForRefresh: Date;\r\n\r\n  snackBarType = '';\r\n  snackBarText = '';\r\n\r\n  requestResponseType = '';\r\n  constructor(private removeBookingService: RemoveBookingService,\r\n              private bookingsService: BookingsService,\r\n              private snackBar: MatSnackBar,\r\n              private seatService: SeatService,\r\n              public dialogRef: MatDialogRef<RemoveBookingPopupComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    this.seat = data.sendSeat,\r\n      this.date = data.date,\r\n      this.dateForRefresh = data.dateForRefresh;\r\n  }\r\n\r\n  clickRemove(): void {\r\n    if (this.seat === undefined) {\r\n      this.dialogRef.close();\r\n      return;\r\n    }\r\n    this.removeBookingService.removeBooking(this.seat.seatId, this.date, this.seat.userCode).pipe(\r\n     map(() => {\r\n       return {snackBarText: 'Your booking was successfully removed', snackBarType: 'succes'};\r\n      }),\r\n      catchError(() => {\r\n        return of({snackBarText: 'An error occured', snackBarType: 'error'});\r\n      })\r\n    )\r\n    .subscribe((response: SnackBarData) => {\r\n        const config = new MatSnackBarConfig();\r\n        config.panelClass = ['snack-bar-response'];\r\n        config.duration = 3000;\r\n        config.verticalPosition = 'top';\r\n        config.data = response;\r\n        this.snackBar.openFromComponent(GenericSnackBarComponent, config);\r\n        this.seatService.fetchSeatsByDate(this.dateForRefresh);\r\n        this.bookingsService.fetchBookingsByUserCode();\r\n        this.dialogRef.close();\r\n    }\r\n    );\r\n  }\r\n  clickCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"popup-container\">\r\n\r\n    <div class=\"grid-title\">\r\n      <p class=\"popup-title\">Desk {{seat?.seatCode}}</p>\r\n    </div>\r\n\r\n    <div class=\"grid-status\">\r\n      <p class=\"popup-status\">\r\n        <mat-icon>stop</mat-icon><span>Booked</span></p>\r\n    </div>\r\n\r\n    <div class=\"grid-description\">\r\n        <p class=\"popup-description\"> Are you sure you want to remove this booking? </p>     \r\n    </div>\r\n\r\n    <div class=\"grid-cancel\">\r\n        <a mat-button class=\"cancel\" [mat-dialog-close]>Cancel</a>\r\n        </div>\r\n\r\n    <div class=\"grid-unbook\">\r\n        <a mat-button class=\"unbook\" (click)=\"clickRemove()\">Yes</a>\r\n    </div>    \r\n\r\n</div>\r\n<app-generic-snack-bar *ngIf=\"requestResponseType\" [requestResponseType]=\"requestResponseType\"></app-generic-snack-bar>","import { Component, Input } from '@angular/core';\r\nimport { Seat } from 'src/app/model/seat';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { RemoveBookingPopupComponent } from '../remove-booking-popup/remove-booking-popup.component';\r\nimport { BookingPopupComponent } from '../booking-popup/booking-popup.component';\r\nimport { StorageService } from 'src/app/services/storage/storage.service';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\n\r\nexport interface DialogData {\r\n  sendSeat: Seat;\r\n  date: string;\r\n  dateForRefresh: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-seats',\r\n  templateUrl: './seats.component.html',\r\n  styleUrls: ['./seats.component.scss'],\r\n})\r\n\r\nexport class SeatsComponent {\r\n\r\n  @Input() seat: Seat | undefined;\r\n  @Input() selectedDate: Date | undefined;\r\n  constructor(public dialog: MatDialog, private storageService: StorageService, private seatService: SeatService) { }\r\n\r\n\r\n  IsActive(): boolean {\r\n    return this.seat?.active ? true : false;\r\n  }\r\n  IsBooked(): boolean {\r\n    if (this.seat?.userCode && this.seat?.active) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getColor(): string[] {\r\n    if (this.IsBooked()) {\r\n      return ['booked'];\r\n    }\r\n    if (this.IsActive()) {\r\n      return ['active'];\r\n    }\r\n    return ['inactive'];\r\n\r\n }\r\n showChair(): boolean { \r\n  if (this.IsBooked() || this.seat?.active){\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n  hasNoBookings(): boolean {\r\n    return this.seatService.hasNoBookings();\r\n  }\r\n\r\n  handleClickOnSeat(): void {\r\n    const selectedDateFormatted = this.selectedDate?.toISOString().split('T')[0];\r\n    if (!this.IsActive()) {\r\n      return;\r\n    }\r\n    if (!this.IsBooked() && this.hasNoBookings()) {\r\n      const sendSeat = this.seat;\r\n      this.dialog.open(BookingPopupComponent, {\r\n        data: { dateForRefresh: this.selectedDate, sendSeat }\r\n      });\r\n    }\r\n    if (this.IsBooked() && JSON.parse(this.storageService.getUserToken()) === this.seat?.userCode) {\r\n      const sendSeat = this.seat;\r\n      this.dialog.open(RemoveBookingPopupComponent, {\r\n        data: { sendSeat, date: selectedDateFormatted, dateForRefresh: this.selectedDate }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"desk\" (click)=\"handleClickOnSeat()\">\r\n  <div class=\"rectangle center\" [ngClass]=\"getColor()\">\r\n    <div [ngClass]=\"{'notBookedSeatId': !IsBooked(), 'bookedSeatId': IsBooked() }\">{{seat?.seatId}}</div>\r\n    <div class=\"userCode\" *ngIf=\"IsBooked()\">{{ seat?.userCode }}</div>\r\n  </div>\r\n  <div *ngIf=\"showChair()\">\r\n      <div class=\"circle booked\"></div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './shared';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EmployeeManagementComponent } from './pages/employee-management/employee-management.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AdminSeat } from 'src/app/model/adminSeat';\r\nimport { AdminSeatStatusService } from 'src/app/services/admin-seat-status/admin-seat-status.service';\r\nimport { DialogDataAdmin } from '../seats-admin';\r\nimport { GenericSnackBarComponent } from '../snackbars/generic-snack-bar/generic-snack-bar.component';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { SnackBarData } from 'src/app/model/snakBarData';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\nimport { ChangeSeatStatusRequest } from 'src/app/model/changeSeatStatusRequest';\r\n\r\n@Component({\r\n  selector: 'app-seats-status-popup',\r\n  templateUrl: './seats-status-popup.component.html',\r\n  styleUrls: ['./seats-status-popup.component.scss']\r\n})\r\nexport class SeatsStatusPopupComponent {\r\n\r\n  adminSeat: AdminSeat;\r\n  snackBarType = '';\r\n  snackBarText = '';\r\n  requestResponseType = '';\r\n\r\n  constructor(private adminSeatService: AdminSeatStatusService,private seatService: SeatService,\r\n     private snackBar: MatSnackBar,private dialogRef: MatDialogRef<SeatsStatusPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogDataAdmin,\r\n  ) { this.adminSeat = data.adminSeat; }\r\n\r\n  clickCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeSeatStatusTo(): string {\r\n    if (this.adminSeat.active) {\r\n      return 'Inactive';\r\n    } else {\r\n      return 'Active';\r\n    }\r\n  }\r\n\r\n  isActive(): boolean {\r\n    if (this.adminSeat.active) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  changeStatusForDto() : boolean {\r\n    if (this.adminSeat.active) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  changeSeatStatus(): void {\r\n    const changeStatusTo = this.changeStatusForDto();\r\n    const seatStatusDto = new ChangeSeatStatusRequest(changeStatusTo);\r\n    this.adminSeatService.changeSeatStatus(seatStatusDto, this.adminSeat.seatId)\r\n    .pipe(\r\n      map(() => {\r\n        return {snackBarText: 'Seat status was changed successfully!', snackBarType: 'succes'};\r\n       }),\r\n       catchError(() => {\r\n         return of({snackBarText: 'Seat status was not changed. Please try again!\"', snackBarType: 'error'});\r\n       })\r\n     )\r\n     .subscribe((response: SnackBarData) => {\r\n         this.snackBar.openFromComponent(GenericSnackBarComponent, \r\n          { panelClass : ['snack-bar-response'], duration : 3000, verticalPosition : 'top', data : response });\r\n         this.seatService.fetchAllSeats(); // we refresh admin seats after change\r\n         this.dialogRef.close();\r\n     }\r\n     );\r\n  }\r\n}\r\n","<div class=\"popup-container\">\r\n\r\n    <div class=\"grid-title\">\r\n        <p class=\"popup-title\">Desk {{adminSeat.seatCode}} </p>\r\n    </div>\r\n\r\n    <div class=\"grid-status\">\r\n        <p *ngIf=\"isActive() else notActive\" class=\"popup-status-active\">\r\n            <mat-icon>stop</mat-icon><span>Active</span></p>\r\n        <ng-template #notActive>\r\n            <p class=\"popup-status-inactive\">\r\n                <mat-icon>stop</mat-icon><span>Inactive</span></p>\r\n        </ng-template>\r\n    </div>\r\n\r\n    <div class=\"grid-description\">\r\n        <p class=\"popup-description\"> Change this seat status to: </p>\r\n           <p class=\"popup-description\"><mat-icon class=\"mat-status\">panorama_fish_eye</mat-icon><span>{{changeSeatStatusTo()}}</span> </p> \r\n        </div>\r\n\r\n    <div class=\"grid-cancel\">\r\n        <a mat-button class=\"cancel\" [mat-dialog-close] (click)=\"clickCancel()\">Cancel</a>\r\n    </div>\r\n\r\n    <div class=\"grid-status-confirm\">\r\n        <a mat-button class=\"confirm\" (click)=\"changeSeatStatus()\">Confirm</a>\r\n    </div>\r\n    \r\n</div>\r\n<app-generic-snack-bar *ngIf=\"requestResponseType\" [requestResponseType]=\"requestResponseType\"></app-generic-snack-bar>\r\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { Component, Inject} from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { DialogData } from '../seats';\r\nimport { Seat } from 'src/app/model/seat';\r\nimport { StorageService } from 'src/app/services/storage/storage.service';\r\nimport { AddBookingService } from 'src/app/services/add-booking/add-booking.service';\r\nimport { BookingRequest } from 'src/app/model/bookingRequest';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GenericSnackBarComponent } from '../snackbars/generic-snack-bar/generic-snack-bar.component';\r\nimport { of } from 'rxjs/internal/observable/of';\r\nimport { SnackBarData } from 'src/app/model/snakBarData';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\nimport { BookingsService } from 'src/app/services/bookins-service/bookings-service.service';\r\n\r\n@Component({\r\n  selector: 'app-booking-popup',\r\n  templateUrl: './booking-popup.component.html',\r\n  styleUrls: ['./booking-popup.component.scss']\r\n})\r\nexport class BookingPopupComponent{\r\n  seat: Seat;\r\n  date: Date;\r\n\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<BookingPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private storageService: StorageService,\r\n    private addBookingService: AddBookingService,\r\n    private snackBar: MatSnackBar,\r\n    private seatService: SeatService,\r\n    private bookingService: BookingsService\r\n  ) {this.seat = data.sendSeat,\r\n    this.date = data.dateForRefresh\r\n    }\r\n\r\n    clickBook(): void{\r\n      if (this.seat === undefined) {\r\n        this.dialogRef.close();\r\n        return;\r\n      }\r\n      const parsedDate = this.date?.toISOString().split('T')[0];\r\n      const parsedUserId = JSON.parse(this.storageService.getUserToken());\r\n      const booking = new BookingRequest(parsedDate, this.seat.seatId, parsedUserId);\r\n        this.addBookingService.addBookingPostRequest(booking)\r\n        .pipe(\r\n          map(() => {\r\n            return {snackBarText: 'Your booking was successfully added', snackBarType: 'succes'};\r\n           }),\r\n           catchError(() => {\r\n             return of({snackBarText: 'An error occured', snackBarType: 'error'});\r\n           })\r\n         )\r\n         .subscribe(\r\n           (response:SnackBarData)=>{this.onSubscribe(response);}\r\n         );\r\n    }\r\n\r\n    onSubscribe(response: SnackBarData):void{\r\n      const config = new MatSnackBarConfig();\r\n      config.panelClass = ['snack-bar-response'];\r\n      config.duration = 3000;\r\n      config.verticalPosition = 'top';\r\n      config.data = response;\r\n      this.snackBar.openFromComponent(GenericSnackBarComponent, config);\r\n      this.seatService.fetchSeatsByDate(this.date);\r\n      this.bookingService.fetchBookingsByUserCode();\r\n      this.dialogRef.close();\r\n    }\r\n\r\n}\r\n","<div class=\"popup-container\" >\r\n\r\n    <div class=\"grid-title\">\r\n      <p class=\"popup-title\">Desk {{seat?.seatCode}}</p>\r\n    </div>\r\n\r\n    <div class=\"grid-status\">\r\n      <p class=\"popup-status\">\r\n        <mat-icon>stop</mat-icon><span>Available</span></p>\r\n    </div>\r\n\r\n    <div class=\"grid-description\">\r\n        <p class=\"popup-description\"> Do you want to sit here on {{this.date.toDateString()}}? </p>     \r\n    </div>\r\n\r\n    <div class=\"grid-cancel\">\r\n        <a mat-button class=\"cancel\" [mat-dialog-close]>Cancel</a>\r\n    </div>\r\n    <div class=\"grid-book\">\r\n        <a mat-button class=\"book\" (click)=\"clickBook()\">Yes</a>\r\n    </div> \r\n</div>\r\n\r\n","export * from './seats-admin.component';","import { Component } from '@angular/core';\r\nimport { SeatService } from 'src/app/services/seat/seat.service';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.scss'],\r\n})\r\nexport class OverviewComponent {\r\n  selectedDate!: Date;\r\n\r\n  constructor(private seatService: SeatService) {}\r\n\r\n  saveDate(date: Date) {\r\n    this.selectedDate = date;\r\n    this.seatService.fetchSeatsByDate(this.selectedDate);\r\n    this.seatService.setCurrentSelectedDate(this.selectedDate);\r\n  }\r\n}\r\n","<p class=\"header-text\">BOOK YOUR SEAT</p>\r\n<app-date-selector (newDateEvent)=\"saveDate($event)\"></app-date-selector>\r\n<app-display-seats [selectedDate]=\"selectedDate\"></app-display-seats>","import { Component, Input} from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AdminSeat } from 'src/app/model/adminSeat';\r\nimport { SeatsStatusPopupComponent } from '../seats-status-popup/seats-status-popup.component';\r\n\r\nexport interface DialogDataAdmin {\r\n  adminSeat : AdminSeat;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-seats-admin',\r\n  templateUrl: './seats-admin.component.html',\r\n  styleUrls: ['./seats-admin.component.scss']\r\n})\r\nexport class SeatsAdminComponent {\r\n\r\n  @Input() adminSeat!: AdminSeat;\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  IsActive(): boolean {\r\n    return  this.adminSeat.active;\r\n  }\r\n\r\n  getColor(): string[] {\r\n    if (this.IsActive()) {\r\n      return ['admin-active'];\r\n    } else {\r\n      return ['admin-inactive'];\r\n    }\r\n  }\r\n\r\n  changeStatus(): void {\r\n    this.dialog.open(SeatsStatusPopupComponent, {\r\n      data: { adminSeat: this.adminSeat},\r\n      panelClass: 'seats-popup'\r\n    });\r\n  }\r\n}\r\n","<div class=\"desk\" (click)=\"changeStatus()\">\r\n    <div class=\"rectangle center\" [ngClass]=\"getColor()\"> </div>\r\n    <div class=\"circle booked\"></div>\r\n</div>\r\n","export class User {\r\nuserCode: string;\r\nname: string;\r\nconstructor(userCode: string, name: string){\r\n    this.userCode = userCode;\r\n    this.name = name;\r\n}\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpBaseService } from './http-base.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class JavaHttpService extends HttpBaseService {\r\n\r\n  constructor(protected http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  protected getBasePath(): string {\r\n    return environment.javaServerAddress;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport { DateNavigatorService } from 'src/app/services/date-navigator/date-navigator.service';\r\n\r\n@Component({\r\n  selector: 'app-date-selector',\r\n  templateUrl: './date-selector.component.html',\r\n  styleUrls: ['./date-selector.component.scss'],\r\n})\r\nexport class DateSelectorComponent implements OnInit {\r\n  constructor(private dateNavigatorService: DateNavigatorService) {}\r\n\r\n  public dates = new Array<Date>();\r\n  public selectedIndex: number = 0;\r\n  @Output() newDateEvent = new EventEmitter<Date>();\r\n\r\n  public ngOnInit(): void {\r\n    this.updateSelectedIndexIfWorkingDay();\r\n    this.dateNavigatorService.buildDatesArray(this.dates);\r\n    this.newDateEvent.emit(this.dates[this.selectedIndex]);\r\n  }\r\n\r\n  selectDateOnClick(i: number): void {\r\n    this.selectedIndex = i;\r\n    this.newDateEvent.emit(this.dates[this.selectedIndex]);\r\n  }\r\n\r\n  updateSelectedIndexIfWorkingDay() : void {\r\n    if(this.dateNavigatorService.isAWorkingDay(this.dateNavigatorService.startDay)) {\r\n      this.selectedIndex = 1;\r\n    }\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n    <div *ngFor=\"let date of dates;let i=index;\">\r\n      <div class=\"child\">\r\n        <button mat-raised-button class=\"btn-primary\" (click)=\"selectDateOnClick(i)\"\r\n          [ngClass]=\"{'selected-color' : i===selectedIndex}\">{{date |\r\n          date:'EEE dd.MM'}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminAuthGuard } from './guard/admin/admin-guard';\r\nimport { AuthGuard } from './guard/user/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'home',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule)\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./pages/login/login.module').then(m => m.LoginModule)\r\n  },\r\n  {\r\n    path: 'admin/login',\r\n    loadChildren: () => import('./pages/login-admin/login-admin.module').then(m => m.LoginAdminModule)\r\n  },\r\n  {\r\n    path: 'admin/home',\r\n    canActivate: [AdminAuthGuard],\r\n    loadChildren: () => import('./pages/home-admin/home-admin.module').then(m => m.HomeAdminModule)\r\n  },\r\n  {\r\n    path: 'admin/employee-management',\r\n    loadChildren: () => import('./pages/employee-management/employee-management.module').then(m => m.EmployeeManagementModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { SnackBarData } from 'src/app/model/snakBarData';\r\nimport { DialogDataDeleteEmployee } from 'src/app/pages/employee-management/employee-management.component';\r\nimport { EmployeeService } from 'src/app/services/employee/employee.service';\r\nimport { GenericSnackBarComponent } from '../snackbars/generic-snack-bar/generic-snack-bar.component';\r\n\r\n@Component({\r\n  selector: 'app-delete-employee-popup',\r\n  templateUrl: './delete-employee-popup.component.html',\r\n  styleUrls: ['./delete-employee-popup.component.scss']\r\n})\r\nexport class DeleteEmployeePopupComponent  {\r\n  userCode!: string;\r\n  snackBarType = '';\r\n  snackBarText = '';\r\n  requestResponseType = '';\r\n\r\n  constructor(private employeeService: EmployeeService, private snackBar: MatSnackBar,private dialogRef: MatDialogRef<DeleteEmployeePopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogDataDeleteEmployee,\r\n  ) { this.userCode = data.userCode; }\r\n\r\n\r\n  clickCancel() : void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeOnConfirm() : void {\r\n    this.employeeService.deleteEmployee(this.userCode)\r\n    .pipe(\r\n      map(() => {\r\n        return {snackBarText: 'Employee deleted successfully!', snackBarType: 'succes'};\r\n       }),\r\n       catchError(() => {\r\n         return of({snackBarText: 'Employee was not deleted. Please try again!\"', snackBarType: 'error'});\r\n       })\r\n     )\r\n     .subscribe((response: SnackBarData) => {\r\n         this.snackBar.openFromComponent(GenericSnackBarComponent, \r\n          { panelClass : ['snack-bar-response'], duration : 3000, verticalPosition : 'top', data : response });\r\n         this.employeeService.fetchAllEmployees();\r\n         this.dialogRef.close();\r\n     });\r\n  }\r\n\r\n}\r\n","<div class=\"popup-container\">\r\n\r\n    <div class=\"grid-description\">\r\n        <p class=\"popup-description\"> Are you sure you want to delete </p>\r\n        <p class=\"popup-description-right\"> the employee with user code {{userCode }} ? </p>\r\n    </div>\r\n\r\n    <div class=\"grid-cancel\">\r\n        <a mat-button class=\"cancel\" [mat-dialog-close] (click)=\"clickCancel()\">No</a>\r\n    </div>\r\n\r\n    <div class=\"grid-status-confirm\">\r\n        <a mat-button class=\"confirm\" (click)=\"changeOnConfirm()\">Yes</a>\r\n    </div>\r\n    \r\n</div>\r\n<app-generic-snack-bar *ngIf=\"requestResponseType\" [requestResponseType]=\"requestResponseType\"></app-generic-snack-bar>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Booking } from 'src/app/model/booking';\r\nimport { BookingsResponseDto } from 'src/app/model/bookingsResponseDto';\r\nimport { BookingWithProperty } from 'src/app/model/bookingsWithProperty';\r\nimport { BookingsDeleteRequest } from 'src/app/model/bookingsDeleteRequest';\r\nimport { DotNetHttpService } from 'src/app/shared/http/dotnet-http.service';\r\nimport { JavaHttpService } from 'src/app/shared/http/java-http.service';\r\nimport { StorageService } from '../storage/storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingsService {\r\n  bookings: BehaviorSubject<Array<Booking>> = new BehaviorSubject(new Array());\r\n\r\n  constructor(private httpServiceJava: JavaHttpService,\r\n    private httpServiceDotNet: DotNetHttpService,\r\n    private storageService: StorageService) { }\r\n\r\n  fetchBookingsByUserCode(): void {\r\n    const userCodeReq = this.storageService.getUserToken()?.split('\"')[1];\r\n    this.httpServiceJava\r\n      .get<BookingsResponseDto>(`/bookedSeats/${userCodeReq}`)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.bookedSeatDtoList;\r\n        })\r\n      )\r\n      .subscribe((response) => {\r\n        this.bookings.next(response);\r\n      });\r\n  }\r\n  \r\n  sendBookingsForDeletion(bookingsForDeletions: BookingWithProperty[]): Observable<void> {\r\n    const result = bookingsForDeletions.filter(item => item.checked)\r\n      .map(item => ({ SeatId: item.id, BookedDate: item.bookedDate }));\r\n    return this.httpServiceDotNet\r\n      .put('/booking/bookingsArray', result)\r\n  }\r\n}\r\n","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { SnackBarData } from 'src/app/model/snakBarData';\r\n\r\n@Component({\r\n  selector: 'app-generic-snack-bar',\r\n  templateUrl: './generic-snack-bar.component.html',\r\n  styleUrls: ['./generic-snack-bar.component.scss']\r\n})\r\nexport class GenericSnackBarComponent implements OnInit {\r\n  snackBarText = '';\r\n  snackBarType = '';\r\n  snackBarIcon = '';\r\n  snackBarColor = '';\r\n  @Input() requestResponseType?: string;\r\n  constructor(public snackBarRef: MatSnackBarRef<GenericSnackBarComponent>,\r\n              @Inject(MAT_SNACK_BAR_DATA) public data: SnackBarData) {\r\n            this.snackBarText = data.snackBarText;\r\n            this.snackBarType = data.snackBarType;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.chooseSnackBar();\r\n  }\r\n\r\n  chooseSnackBar(): void {\r\n    if (this.snackBarType === 'succes') {\r\n      this.snackBarIcon = 'CheckRounded.svg';\r\n      this.snackBarColor = '#3DD4AD';\r\n    }\r\n    if (this.snackBarType === 'error') {\r\n      this.snackBarIcon = 'ErrorRounded.svg';\r\n      this.snackBarColor = '#E30074';\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\" [style.border-left-color]=\"snackBarColor\">\r\n    <img class=\"checked-icon\" src=\"./assets/images/{{snackBarIcon}}\">\r\n    <span class=\"response-label\">{{snackBarText}}</span>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export * from './seats.component';\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}