     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fscanf, fprintf, fclose, scanf        
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fscanf msvcrt.dll
    12                                  import scanf msvcrt.dll    
    13                                  import fprintf msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18                                     
    19 00000000 00<rept>                    file_name_input times 30 db 0
    20 0000001E 7200                        access_mode_input db "r", 0
    21 00000020 00000000                    file_descriptor_input dd 0
    22                                  
    23 00000024 6F75747075742E7478-         file_name_output dd "output.txt", 0
    23 0000002D 74000000000000     
    24 00000034 7700                        access_mode_output db "w", 0
    25 00000036 00000000                    file_descriptor_output dd 0
    26                                      
    27 0000003A 257300                      format_reading_string db "%s", 0
    28 0000003D 256300                      format_reading_char db "%c", 0
    29 00000040 256400                      format_reading_nr db "%d", 0
    30 00000043 25732000                    format_printing db "%s ", 0
    31                                    
    32 00000047 00                          s db 0
    33 00000048 00                          p db 0
    34                                      
    35 00000049 00<rept>                    text times 30 db 0
    36                                      
    37                                      
    38                                      
    39                                  ; our code starts here
    40                                  segment code use32 class=code
    41                                      start:
    42                                          ; ...
    43                                          ;reading file name
    44 00000000 68[00000000]                    push dword file_name_input            
    45 00000005 68[3A000000]                    push dword format_reading_string
    46 0000000A FF15[00000000]                  call [scanf]
    47 00000010 83C408                          add esp, 4*2
    48                                          
    49                                          ; reading special char
    50 00000013 68[47000000]                    push dword s            
    51 00000018 68[3A000000]                    push dword format_reading_string
    52 0000001D FF15[00000000]                  call [scanf]
    53 00000023 83C408                          add esp, 4*2
    54                                          
    55                                          ;reading nr
    56 00000026 68[48000000]                    push dword p           
    57 0000002B 68[40000000]                    push dword format_reading_nr
    58 00000030 FF15[00000000]                  call [scanf]
    59 00000036 83C408                          add esp, 4*2
    60                                          
    61                                          ;open input file
    62 00000039 68[1E000000]                    push dword access_mode_input
    63 0000003E 68[00000000]                    push dword file_name_input
    64 00000043 FF15[00000000]                  call [fopen]
    65 00000049 83C408                          add esp, 4*2
    66                                          
    67 0000004C A3[20000000]                    mov [file_descriptor_input], eax
    68                                          
    69 00000051 83F800                          cmp eax, 0
    70 00000054 0F84A3000000                    je final
    71                                          
    72                                          ;open output file
    73 0000005A 68[34000000]                    push dword access_mode_output
    74 0000005F 68[24000000]                    push dword file_name_output
    75 00000064 FF15[00000000]                  call [fopen]
    76 0000006A 83C408                          add esp, 4*2
    77                                          
    78 0000006D A3[36000000]                    mov [file_descriptor_output], eax
    79                                          
    80 00000072 83F800                          cmp eax, 0
    81 00000075 0F8482000000                    je final
    82                                          
    83                                          
    84                                          reading:
    85                                       
    86 0000007B 68[49000000]                        push dword text
    87 00000080 68[3A000000]                        push dword format_reading_string
    88 00000085 FF35[20000000]                      push dword [file_descriptor_input]
    89 0000008B FF15[00000000]                      call [fscanf]
    90 00000091 83C40C                              add esp, 4*3
    91                                              
    92 00000094 83F8FF                              cmp eax, -1
    93 00000097 7464                                je final
    94                                              
    95 00000099 BB00000000                          mov ebx, 0
    96 0000009E BE[49000000]                        mov esi, text
    97                                              
    98                                          	repeta:
    99                                              
   100 000000A3 AC                                 		lodsb
   101                                                  
   102 000000A4 83F800                              	cmp eax, 0 
   103 000000A7 741B                                	je out_of_loop
   104                                                  
   105 000000A9 3A1D[48000000]                          cmp bl, [p]
   106 000000AF 7F02                                    jg change_char
   107 000000B1 EB0E                                    jmp here
   108                                                  
   109                                                  change_char:
   110 000000B3 B200                                        mov dl, 0
   111 000000B5 8A15[47000000]                              mov dl, [s]
   112 000000BB 8893[49000000]                              mov [text+ebx], dl
   113                                                   
   114                                                  here:
   115 000000C1 43                                      inc ebx
   116                                                  
   117                                                  
   118 000000C2 EBDF                                jmp repeta
   119                                  
   120                                              out_of_loop:
   121                                              
   122 000000C4 68[49000000]                        push dword text
   123 000000C9 68[43000000]                        push dword format_printing  
   124 000000CE FF35[36000000]                      push dword [file_descriptor_output]
   125 000000D4 FF15[00000000]                      call [fprintf]
   126 000000DA 83C40C                              add esp, 4*3
   127 000000DD EB9C                            jmp reading
   128                                      
   129 000000DF FF35[20000000]                  push dword [file_descriptor_input]
   130 000000E5 FF15[00000000]                  call [fclose]
   131 000000EB 83C404                          add esp, 4
   132                                          
   133 000000EE FF35[36000000]                  push dword [file_descriptor_output]
   134 000000F4 FF15[00000000]                  call [fclose]
   135 000000FA 83C404                          add esp, 4
   136                                      
   137                                      final:
   138                                      ; exit(0)
   139 000000FD 6A00                        push    dword 0      ; push the parameter for exit onto the stack
   140 000000FF FF15[00000000]              call    [exit]       ; call exit to terminate the program
