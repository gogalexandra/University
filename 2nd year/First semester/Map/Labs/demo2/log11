PrgState 1 {
ExeStack: int c
b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

bool b

SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: int c
b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

bool b

SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: int c
b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> false; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: int c
b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> false; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

int c

SymTable: b -> false; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

int c

SymTable: b -> false; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> false; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> false; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

b=true

SymTable: b -> false; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

b=true

SymTable: b -> false; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

c = b ? 100 : 200

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

c = b ? 100 : 200

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

(if(b) then(c=100)else(c=200))

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

(if(b) then(c=100)else(c=200))

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

c=100

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

c=100

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = false ? 100 : 200
print(c)

print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = false ? 100 : 200
print(c)

print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

c = false ? 100 : 200

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

c = false ? 100 : 200

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

(if(false) then(c=100)else(c=200))

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

(if(false) then(c=100)else(c=200))

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

c=100

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

c=100

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 100 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 100 
--------------------------------
PrgState 1 {
ExeStack: int c
b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

bool b

SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: int c
b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

bool b

SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: int c
b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> false; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: int c
b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> false; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

int c

SymTable: b -> false; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

int c

SymTable: b -> false; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> false; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: b=true
c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> false; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

b=true

SymTable: b -> false; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

b=true

SymTable: b -> false; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = b ? 100 : 200
print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

c = b ? 100 : 200

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

c = b ? 100 : 200

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

(if(b) then(c=100)else(c=200))

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

(if(b) then(c=100)else(c=200))

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

c=100

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

c=100

SymTable: b -> true; c -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(c)
c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = false ? 100 : 200
print(c)

print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = false ? 100 : 200
print(c)

print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: c = false ? 100 : 200
print(c)

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

c = false ? 100 : 200

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

c = false ? 100 : 200

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

(if(false) then(c=100)else(c=200))

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

(if(false) then(c=100)else(c=200))

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

c=200

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

c=200

SymTable: b -> true; c -> 100; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

SymTable: b -> true; c -> 200; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
print(c)

SymTable: b -> true; c -> 200; 
FileTable: 
Heap: 
Output: 100 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: b -> true; c -> 200; 
FileTable: 
Heap: 
Output: 100 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: b -> true; c -> 200; 
FileTable: 
Heap: 
Output: 100 200 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 2 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 2 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6bc872c
Output: 10 200 199 
--------------------------------
PrgState 3 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 5 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 5 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 4 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 3 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 3 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 3 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@502bae5e
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 2 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 2 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@11168c96
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 2 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 2 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@25709e3f
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 2 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 2 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 2 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@63a54178
Output: 10 200 199 
--------------------------------
PrgState 3 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Ref(int) v1

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: int cnt
newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

int cnt

SymTable: v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: newAlloc(v1 , 1)
Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

newAlloc(v1 , 1)

SymTable: cnt -> 0; v1 -> (0, int); 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: Semaphore(cnt; rH(v1))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

Semaphore(cnt; rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))
fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(print(rH(v1));acquire(cnt)))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))
acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

fork((acquire(cnt);(wH(v1, rH(v1)*10);(wH(v1, rH(v1)*2);(print(rH(v1));acquire(cnt))))))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 5 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: acquire(cnt)
print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: wH(v1, rH(v1)*10)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 5 {
ExeStack: acquire(cnt)
wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 1
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 4 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*10)
wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*10)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 10
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: wH(v1, rH(v1)*2)
print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: print(rH(v1))
acquire(cnt)

wH(v1, rH(v1)*2)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 100
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: print(rH(v1))
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 5 {
ExeStack: 
acquire(cnt)

print(rH(v1))

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: print(rH(v1)-1)
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: 
acquire(cnt)

print(rH(v1)-1)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 
--------------------------------
PrgState 3 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 3 {
ExeStack: 
acquire(cnt)

SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 3 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 3 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 4 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
PrgState 5 {
ExeStack: 
SymTable: cnt -> 0; v1 -> (1, int); 
FileTable: 
Heap: 1 -> 200
Semaphore: Model.Utils.MySemaphore@6e5a79c4
Output: 10 200 199 
--------------------------------
