PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v

SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v

SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

v=4

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

v=4

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 0 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 0 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v

SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v

SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

v=4

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

v=4

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 0 
--------------------------------
PrgState 1 {
ExeStack: 
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 0 
--------------------------------
PrgState 0 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

v=4

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

v=4

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 3; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 3; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 3; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 3; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 2; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 2; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 2; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 2; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 1; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 1; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )
print(v)
v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 1; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

print(v)

SymTable: v -> 1; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 1 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 1 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 1 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

while(v>0) do ( (print(v);v=v-1) )

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 1 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 1 
--------------------------------
PrgState 0 {
ExeStack: 
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 1 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 1 0 
--------------------------------
PrgState 0 {
ExeStack: 
SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MySemaphore@5033a1a3
Output: 4 3 2 1 0 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MyBarrier@1de05534
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v

SymTable: 
FileTable: 
Heap: 
Semaphore: Model.Utils.MyBarrier@1de05534
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MyBarrier@1de05534
Output: 
--------------------------------
PrgState 1 {
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 0; 
FileTable: 
Heap: 
Semaphore: Model.Utils.MyBarrier@1de05534
Output: 
--------------------------------
