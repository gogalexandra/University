PrgState{
ExeStack: int v
v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)



SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v
SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)

int v
SymTable: 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)


SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: v=4
while(v>0) do ( (print(v);v=v-1) )
print(v)


SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)
v=4
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)
v=4
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: while(v>0) do ( (print(v);v=v-1) )
print(v)

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )print(v)
v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )print(v)
v=v-1

SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1print(v)
SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1print(v)
SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1
SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1
SymTable: v -> 4; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )print(v)
v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )print(v)
v=v-1

SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1print(v)
SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1print(v)
SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1
SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1
SymTable: v -> 3; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )print(v)
v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )print(v)
v=v-1

SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1print(v)
SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1print(v)
SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1
SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1
SymTable: v -> 2; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )print(v)
v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )print(v)
v=v-1

SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1print(v)
SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1print(v)
SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1
SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )v=v-1
SymTable: v -> 1; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState{
ExeStack: print(v)while(v>0) do ( (print(v);v=v-1) )
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState{
ExeStack: print(v)
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState{
ExeStack: print(v)
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 
--------------------------------
PrgState{
ExeStack: 
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 0 
--------------------------------
PrgState{
ExeStack: 
SymTable: v -> 0; 
FileTable: 
Heap: 
Output: 4 3 2 1 0 
--------------------------------
